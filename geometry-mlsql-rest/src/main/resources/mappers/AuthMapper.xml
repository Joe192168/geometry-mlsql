<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.geominfo.mlsql.mapper.AuthMapper">
    <select id="fetchAuth" resultType="com.geominfo.mlsql.domain.vo.MLSQLAuthTable">
        SELECT
            mlsqlGroup.name AS teamName,
            roleGroup.name AS roleName,
            mlsqlTable.db,
            mlsqlTable.name AS tableName,
            mlsqlTable.table_type AS tableType,
            mlsqlTable.source_type AS sourceType,
            roleAuth.operate_type AS operateType
        FROM mlsql_user user
            JOIN mlsql_role_member roleMember ON user.id=roleMember.mlsql_user_id
            JOIN mlsql_group_role roleGroup ON roleMember.mlsql_group_role_id=roleGroup.id
            JOIN mlsql_group mlsqlGroup ON mlsqlGroup.id=roleGroup.mlsql_group_id
            JOIN mlsql_group_role_auth roleAuth ON roleMember.mlsql_group_role_id=roleAuth.mlsql_group_role_id
            JOIN mlsql_table mlsqlTable ON roleAuth.mlsql_table_id=mlsqlTable.id
            JOIN mlsql_group_table tableGroup ON roleAuth.mlsql_table_id=tableGroup.mlsql_table_id AND  roleGroup.mlsql_group_id=tableGroup.mlsql_group_id
        WHERE user.name=#{name}
    </select>
    <select id="getTeamTable" parameterType="java.lang.Integer" resultType="com.geominfo.mlsql.domain.vo.MLSQLAuthTable">
        SELECT
             tables.name AS tableName
            ,tables.db
            ,tables.table_type AS tableType
            ,tables.source_type AS sourceType
            ,tables.id
        FROM mlsql_table tables
            JOIN mlsql_group_table groups ON tables.id=groups.mlsql_table_id
        WHERE mlsql_group_id=#{mlsql_group_id}
    </select>
    <insert id="insertMlsqlTable" parameterType="com.geominfo.mlsql.domain.vo.MLSQLAuthTable" keyProperty="id" keyColumn="id" useGeneratedKeys="true">
        INSERT INTO mlsql_table(name,db,table_type,source_type) VALUES(
            #{tableName},#{db},#{tableType},#{sourceType}
        )
    </insert>
    <insert id="insertMlsqlGroupTable" parameterType="com.geominfo.mlsql.domain.vo.MlsqlGroupTable">
        INSERT INTO mlsql_group_table(mlsql_table_id, mlsql_group_id)
        VALUES (
            #{tableId},
            #{groupId}
        )
    </insert>
    <delete id="deleteMlsqlTable" parameterType="java.lang.Integer">
        DELETE FROM mlsql_table
        WHERE id=#{id}
    </delete>
    <delete id="deleteMlsqlGroupTable" parameterType="java.lang.Integer">
        DELETE FROM mlsql_group_table
        WHERE mlsql_table_id=#{id}
    </delete>
    <select id="getMlsqlGroupRoleAuth" parameterType="com.geominfo.mlsql.domain.vo.MlsqlGroupRoleAuth" resultType="map">
        SELECT
            id,mlsql_table_id AS tableId
            ,mlsql_group_role_id AS groupRoleId
            ,operate_type AS operteType
        FROM mlsql_group_role_auth
        WHERE mlsql_table_id=#{tableId}
        AND mlsql_group_role_id=#{groupRoleId}
        AND operate_type = #{operateType}
    </select>
    <insert id="insertMlsqlGroupRoleAuth" parameterType="com.geominfo.mlsql.domain.vo.MlsqlGroupRoleAuth">
        INSERT INTO mlsql_group_role_auth(mlsql_table_id,mlsql_group_role_id,operate_type)
        VALUES(
                #{tableId},
                #{groupRoleId},
                #{operateType}
        )
    </insert>
    <delete id="deleteGroupRoleAuth" parameterType="com.geominfo.mlsql.domain.vo.MlsqlGroupRoleAuth">
        DELETE FROM mlsql_group_role_auth
        WHERE mlsql_table_id=#{tableId}
        AND mlsql_group_role_id=${groupRoleId}
    </delete>
    <select id="getAuthTableDetail" parameterType="map" resultType="map">
        SELECT tables.id
            ,tables.name
            ,tables.db
            ,tables.table_type AS tableType
            ,tables.source_type AS sourceType
            ,groupRole.name AS roleName
            ,groups.name AS teamName
            ,group_concat(concat(roleAuth.operate_type)) AS operateType
        FROM mlsql_group_role groupRole
            JOIN mlsql_group groups ON groupRole.mlsql_group_id=groups.id
            JOIN mlsql_group_role_auth roleAuth ON groupRole.id=roleAuth.mlsql_group_role_id
            JOIN mlsql_table tables ON roleAuth.mlsql_table_id=tables.id
        WHERE groupRole.name=#{roleName} AND groups.name=#{teamName}
        GROUP BY tables.id,tables.name,tables.db,tables.table_type,
                  tables.source_type,groupRole.name,groups.name
    </select>
    <select id="getWithOutColumns" parameterType="map" resultType="java.lang.String">
        SELECT
            roleAuth.columns
        FROM mlsql_user user
            JOIN mlsql_role_member roleMember ON user.id=roleMember.mlsql_user_id
            JOIN mlsql_group_role roleGroup ON roleMember.mlsql_group_role_id=roleGroup.id
            JOIN mlsql_group mlsqlGroup ON mlsqlGroup.id=roleGroup.mlsql_group_id
            JOIN  mlsql_column_auth roleAuth ON roleMember.mlsql_group_role_id=roleAuth.mlsql_group_role_id
            JOIN mlsql_table mlsqlTable ON roleAuth.mlsql_table_id=mlsqlTable.id
            JOIN mlsql_group_table tableGroup ON roleAuth.mlsql_table_id=tableGroup.mlsql_table_id AND  roleGroup.mlsql_group_id=tableGroup.mlsql_group_id
        WHERE user.name=#{userName} and mlsqlTable.db=#{db} and mlsqlTable.name=#{tableName}
    </select>
</mapper>