<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.geominfo.mlsql.mapper.EngineMapper">
    <select id="findByName" parameterType="java.lang.String" resultType="com.geominfo.mlsql.domain.vo.MlsqlEngine">
        SELECT id,name,url,home,console_url,file_server_url,auth_server_url,skip_auth,extra_opts,access_token
        FROM mlsql_engine
        <where>
            <if test="name != null and name != ''">
                AND name = #{name}
            </if>
        </where>
    </select>
    <select id="getAllEngine" parameterType="map" resultType="com.geominfo.mlsql.domain.vo.MlsqlEngine">
        SELECT A.id,A.name,A.url,A.home,console_url,file_server_url,auth_server_url,skip_auth,extra_opts,access_token
        FROM mlsql_engine  A
            join mlsql_backend_proxy B ON A.name=B.backend_name
            join Mlsql_Group C ON B.mlsql_group_id=c.id
            join mlsql_group_user D ON D.mlsql_group_id=c.id
        <if test="status != null and status != ''">
            AND d.status in( ${status} )
        </if>
        <where>
            <if test="userId != null and userId != ''">
                d.mlsql_user_id= ${userId}
            </if>
        </where>
        UNION ALL
        SELECT A.id,A.name,A.url,A.home,console_url,file_server_url,auth_server_url,skip_auth,extra_opts,access_token
        FROM mlsql_engine  A
        WHERE extra_opts like '%public%'
    </select>
    <update id="updateEngine" parameterType="com.geominfo.mlsql.domain.vo.MlsqlEngine">
        UPDATE mlsql_engine
        <set>
            <if test="name != null and name != ''">
                `name` = #{name},
            </if>
            <if test="url != null and url !=''">
                url = #{url},
            </if>
            <if test="home != null and home != ''">
                home = #{home},
            </if>
            <if test="consoleUrl != null and consoleUrl != ''">
                console_url = #{consoleUrl},
            </if>
            <if test="fileServerUrl != null and fileServerUrl != ''">
                file_server_url = #{fileServerUrl},
            </if>
            <if test="authServerUrl != null and authServerUrl != ''">
                auth_server_url = #{authServerUrl},
            </if>
            <if test="skipAuth != null and skipAuth != ''">
                skip_auth = #{skipAuth},
            </if>
            <if test="extraOpts != null and extraOpts != ''">
                extra_opts = #{extraOpts},
            </if>
            <if test="accessToken != null and accessToken != ''">
                access_token = #{accessToken},
            </if>
        </set>
        <where>
            <if test="id != null and id != ''">
                AND id = #{id}
            </if>
        </where>
    </update>
    <insert id="insertEngine" keyProperty="id" keyColumn="id" useGeneratedKeys="true"
            parameterType="com.geominfo.mlsql.domain.vo.MlsqlEngine">
        INSERT INTO mlsql_engine(name,url,home,console_url,file_server_url,auth_server_url,skip_auth,extra_opts,access_token)
        VALUES(
            #{name,jdbcType=VARCHAR},
            #{url,jdbcType=VARCHAR},
            #{home,jdbcType=VARCHAR},
            #{consoleUrl,jdbcType=VARCHAR},
            #{fileServerUrl,jdbcType=VARCHAR},
            #{authServerUrl,jdbcType=VARCHAR},
            #{skipAuth,jdbcType=VARCHAR},
            #{extraOpts,jdbcType=VARCHAR},
            #{accessToken,jdbcType=VARCHAR})
    </insert>
    <delete id="deleteEngineById" parameterType="int">
        DELETE FROM mlsql_engine
        WHERE id=${id}
    </delete>

    <select id="list" resultType="com.geominfo.mlsql.domain.vo.MlsqlEngine">
        SELECT A.id,A.name,A.url,A.home,A.console_url,A.file_server_url,
        A.auth_server_url,A.skip_auth,A.extra_opts,A.access_token
        FROM mlsql_engine  A
    </select>
</mapper>